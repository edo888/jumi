# $Id: en-GB.plg_system_jumi.ini 92 2009-02-15 17:08:02Z martin2hajek $
# Note : All ini files need to be saved as UTF-8 - No BOM

JUMIPLUGINDESC=<p>This system plugin includes into Joomla! content custom scripts: from a file or from Jumi component database record.</p><p><b>Usage: {jumi stored_code_source}code_written{/jumi}</b><br />where either stored_code_source or code_written can be omitted. Code_written is processed first.</p><p><b>stored_code_source</b><br />is a filepathname to be included or ID of Jumi component database table record.<br />The filepathnames must be referenced relatively to Jumi Root (see plugin parameters).<br />The record ID must be preceeded by an asterrisk (e.g. *1).</p><p><b>code_written</b><br />can be any html, php, javascript, css code. Use Jumi coder (editor button) for code_written!!!</p><p><b>Examples</b>:<br /p>Ex 1: {jumi plugin/system/jumi/jumi_demo.php}{/jumi}<br />Ex 2: {jumi *1}{/jumi}<br /p>Ex 3: {jumi *1}&lt;?php echo 'Hello O\'Harra!'; &gt;{/jumi}<br />Ex 4: {jumi}&lt;?php echo 'Hello O\'Harra!'; ?&gt;{/jumi}</p><p><b>Additional information and resources</b>:<br /><a href="http://jumi.vedeme.cz">Downloads & guides</a><br /><a href="http://edo.webmaster.am/jumi">Tips & tricks</a></p>
PARAMJUMIROOTDESC=Jumi Root is the default absolute path to files to be included by Jumi. Jumi Root is shared by all other Jumi extensions. Setting up Jumi Root brings more comfort and more security.
PARAMJUMIROOTSET=Jumi Root current setting
PARAMJUMIROOTINPUT=Here you can set up Jumi Root. No slash at the end. If left blank then it is identical to Joomla! root directory.
PARAMCLEARJUMI=Defines type of filter for Joomla! articles. From filtered articles Jumi output will be cleared (code exists but it is not displayed). Selective Filters can be set up in Content => Article Manager => Parameters => Filtering options.
PARAMNESTED=If set to Yes then Jumi plugin processes {jumi}...{/jumi} found in stored_code_source too. Do NOT use nested Jumi syntax in code_written!
PARAMDEBUGMODE=If set to No then in case of error (unable to include stored_code_source etc.) nor Jumi plugin error output nor Jumi plugin syntax code will be seen in the frontend.
ERROR_CONTENT=Jumi plugin is working but there is <b>nothing to display</b>.<br />Specify the stored_code_source and/or code_written.
ERROR_FILE=The file <b>%s</b> does not exist or is not readable!
ERROR_RECORD=Record ID:<b>%d</b> does not exist or is not published, or you have got insufficient rights to read it!

